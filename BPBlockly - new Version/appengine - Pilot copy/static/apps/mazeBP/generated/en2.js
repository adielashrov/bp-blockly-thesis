// This file was automatically generated from common.soy.
// Please don't edit this file by hand.

if (typeof apps == 'undefined') { var apps = {}; }


apps.messages = function(opt_data, opt_ignored, opt_ijData) {
  return '<div style="display: none"><span id="subtitle">a visual programming environment</span><span id="blocklyMessage">Blockly</span><span id="codeTooltip">See generated JavaScript code.</span><span id="linkTooltip">Save and link to blocks.</span><span id="runTooltip">Run the program defined by the blocks in the workspace.</span><span id="runProgram">Run Program</span><span id="resetProgram">Reset</span><span id="dialogOk">OK</span><span id="dialogCancel">Cancel</span><span id="catLogic">Logic</span><span id="catLoops">Loops</span><span id="catMath">Math</span><span id="catText">Text</span><span id="catLists">Lists</span><span id="catColour">Colour</span><span id="catVariables">Variables</span><span id="catProcedures">Procedures</span><span id="httpRequestError">There was a problem with the request.</span><span id="linkAlert">Share your blocks with this link:\\n\\n%1</span><span id="hashError">Sorry, \'%1\' doesn\'t correspond with any saved program.</span><span id="xmlError">Could not load your saved file.  Perhaps it was created with a different version of Blockly?</span><span id="listVariable">list</span><span id="textVariable">text</span></div>';
};


apps.dialog = function(opt_data, opt_ignored, opt_ijData) {
  return '<div id="dialogShadow" class="dialogAnimate"></div><div id="dialogBorder"></div><div id="dialog"></div>';
};


apps.codeDialog = function(opt_data, opt_ignored, opt_ijData) {
  return '<div id="dialogCode" class="dialogHiddenContent"><pre id="containerCode"></pre>' + apps.ok(null, null, opt_ijData) + '</div>';
};


apps.storageDialog = function(opt_data, opt_ignored, opt_ijData) {
  return '<div id="dialogStorage" class="dialogHiddenContent"><div id="containerStorage"></div>' + apps.ok(null, null, opt_ijData) + '</div>';
};


apps.ok = function(opt_data, opt_ignored, opt_ijData) {
  return '<div class="farSide" style="padding: 1ex 3ex 0"><button class="secondary" onclick="BlocklyApps.hideDialog(true)">OK</button></div>';
};

;
// This file was automatically generated from template.soy.
// Please don't edit this file by hand.

if (typeof mazepage == 'undefined') { var mazepage = {}; }


mazepage.messages = function(opt_data, opt_ignored, opt_ijData) {
  return apps.messages(null, null, opt_ijData) + '<div style="display: none"><span id="Maze_moveForward">move forward</span><span id="Maze_turnLeft">turn left</span><span id="Maze_turnRight">turn right</span><span id="Maze_doCode">do</span><span id="Maze_elseCode">else</span><span id="Maze_helpIfElse">If-else blocks will do one thing or the other.</span><span id="Maze_pathAhead">if path ahead</span><span id="Maze_pathLeft">if path to the left</span><span id="Maze_pathRight">if path to the right</span><span id="Maze_repeatUntil">repeat until</span><span id="Maze_moveForwardTooltip">Moves the player forward one space.</span><span id="Maze_turnTooltip">Turns the player left or right by 90 degrees.</span><span id="Maze_ifTooltip">If there is a path in the specified direction, then do some actions.</span><span id="Maze_ifelseTooltip">If there is a path in the specified direction, then do the first block of actions.  Otherwise, do the second block of actions.</span><span id="Maze_whileTooltip">Repeat the enclosed actions until finish point is reached.</span><span id="Maze_capacity0">You have %0 blocks left.</span><span id="Maze_capacity1">You have %1 block left.</span><span id="Maze_capacity2">You have %2 blocks left.</span><span id="Maze_nextLevel">Congratulations! Are you ready to proceed to level %1?</span><span id="Maze_finalLevel">Congratulations! You have solved the final level.</span><!--BP\'s added msg\'s - update description--><span id="scoped_request">move forward BP</span><span id="bp_forward">move forward BP</span></div>';
};


mazepage.start = function(opt_data, opt_ignored, opt_ijData) {
  var output = mazepage.messages(null, null, opt_ijData) + '<table width="100%"><tr><td><h1><span id="title"><!--<a href="../index.html">Blockly</a> : -->Maze</span> &nbsp; ';
  for (var i167 = 1; i167 < 10; i167++) {
    output += '<!--BP - Hard coded 8 levels for now--> ' + ((i167 == opt_ijData.level) ? '<span class="tab" id="selected">' + soy.$$escapeHtml(i167) + '</span>' : (i167 < opt_ijData.level) ? '<a class="tab previous" href="?lang=' + soy.$$escapeHtml(opt_ijData.lang) + '&level=' + soy.$$escapeHtml(i167) + '&skin=' + soy.$$escapeHtml(opt_ijData.skin) + '&ver=2">' + soy.$$escapeHtml(i167) + '</a><!--Version is 1 hard-coded Re factor-->' : '<a class="tab" href="?lang=' + soy.$$escapeHtml(opt_ijData.lang) + '&level=' + soy.$$escapeHtml(i167) + '&skin=' + soy.$$escapeHtml(opt_ijData.skin) + '&ver=2">' + soy.$$escapeHtml(i167) + '</a><!--Version is 1 hard-coded Re factor-->');
  }
  output += '</h1></td><td class="farSide"><!--<select id="languageMenu" onchange="BlocklyApps.changeLanguage();"></select> &nbsp; --TODO: Multiple selection for languages is here>.--><button id="pegmanButton" onmousedown="Maze.showPegmanMenu();" style="visibility:hidden"><img src="../../media/1x1.gif"><span>&#x25BE;</span></button></td></tr></table><div id="visualization"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" id="svgMaze" width="400px" height="400px"><g id="look"><path d="M 0,-15 a 15 15 0 0 1 15 15" /><path d="M 0,-35 a 35 35 0 0 1 35 35" /><path d="M 0,-55 a 55 55 0 0 1 55 55" /></g></svg><div id="capacityBubble"><div id="capacity"></div></div></div><table width="400"><tr><td style="width: 190px; text-align: center; vertical-align: top;"><!-- <button id="showCodeButton" class="notext" title="See generated JavaScript code." onclick="Maze.showCode(this);"><img src="../../media/1x1.gif" class="code icon21"></button> -- Removed the showCodeButton also--><!--<button id="linkButton" class="notext" title="Save and link to blocks." onclick="BlocklyStorage.link();"><img src="../../media/1x1.gif" class="link icon21"></button> --BP - Removed link button for now? Ask Gera--><!-- Removed hint button for now. BP--><!--<button id="showExplanations" class="primary" onclick="Maze.endLevelExplanation()" title="Click this button to see the lesson learned in this level" style="background-color: #00CC33; border-color: #00CC00;height:46px; width:60px;visibility:visible;"><div style=""><img src="../../media/light_bulb_mark.png" style="height:35px; width:35px; vertical-align:middle; margin-top: -7px;"></div></button>--><button id="showMessages" class="primary" onclick="Maze.showMessagesListener()" title="Click this button to see the help messages from the beginning" style="background-color: #2E64FE; border-color: #0099FF;height:46px; width:60px;"><div style=""><img src="../../media/question_mark.png" style="height:35px; width:35px; vertical-align:middle; margin-top: -7px;"></div></button></td><td><button id="runButton" class="primary" onclick="Maze.runButtonClick();" title="Click this button to execute your program." style="width:175px"><img src="../../media/1x1.gif" class="run icon21"> Run Program</button><button id="resetButton" class="primary" onclick="Maze.resetButtonClick();" style="display: none" title="Put the player back at the start of the maze."><img src="../../media/1x1.gif" class="stop icon21"> Reset</button></td></tr><tr><td style="width: 190px; text-align: center; vertical-align: top;"><button id="continueButton" class="primary" onclick="Maze.continueButtonClicked()" title="Click this button if you want to continue the execution" style="display: none; width:175px"><img src="../../media/1x1.gif" class="run icon21"> Continue</button><button id="fastForwardButton" class="primary" onclick="Maze.fastForwardButtonClicked()" title="Click this button if you want to continue the execution" style="display: none; width:175px;"><img src="../../media/fast_forward.png" style="height:21px; width:21px;float:left;" ><div style="float:left;padding-left: 15px;">Faster</div></button></td><td><button id="singleStepButton" class="primary" onclick="Maze.singleStepButtonClicked()" title="Click this button if you want to see the execution in slow motion" style="display: none; width:175px"><img src="../../media/pause_step.gif"> Single Step</button><button id="pauseMotionButton" class="primary" onclick="Maze.pauseMotionButtonClicked()" title="Click this button if you want to see the execution in slow motion" style="display: inline; width:175px"><img src="../../media/pause.gif" height= "20" width = "25"> Pause</button></td></tr><tr><td colspan="2" style="text-align: center; vertical-align: top;"><div id="loggerTextArea" style="height:250px; text-align: center; vertical-align: top; overflow:scroll; border-style: solid;border-width: 1px;"><p style = "margin: 7px"> Events logs will appear here</p></div></td></tr></table><script type="text/javascript;version=1.7" src="../../blockly_compressed.js"><\/script><script type="text/javascript;version=1.7" src="../../javascript_compressed.js"><\/script><script type="text/javascript;version=1.7" src="../../' + soy.$$escapeHtml(opt_ijData.langSrc) + '"><\/script><script type="text/javascript;version=1.7" src="blocks.js"><\/script><script type="text/javascript;version=1.7" src="bpblocks.js"><\/script>' + mazepage.toolbox(null, null, opt_ijData) + '<div id="blockly"></div><svg version="1.1" height="1px" width="1px"><text id="arrowTest" style="font-family: sans-serif; font-size: 11pt;">⟲⟳</text></svg><div id="pegmanMenu"></div>' + apps.dialog(null, null, opt_ijData) + apps.codeDialog(null, null, opt_ijData) + apps.storageDialog(null, null, opt_ijData) + '<!-----------------------------------------------------------------------------------------------------------------------------><!-------------------------------------------------------BP\'s Messages--Start--------------------------------------------------><!-----------------------------------------------------------------------------------------------------------------------------><!-----------------------------------------------------------------------------------------------------------------------------><!-------------------------------------------------------Version 1 High level idioms - Start-----------------------------------><!-----------------------------------------------------------------------------------------------------------------------------><!--TODO: Change the name of this dialogue--><div id="dialogHelp_Level_1_1_BP_ver1" class="dialogHiddenContent" style="width:auto;"><div>Please press the play button to start the tutorial.</div><div style="margin:10px 10px 10px 10px; padding:0px 0px 0px 0px; text-align:center;"><!--<iframe id="ytplayer" type="text/html" width="640" height="360" src="http://www.youtube.com/embed/MZwityt82HE?rel=0" frameborder="0" allowfullscreen></iframe>--><iframe width="640" height="360" src="//www.youtube.com/embed/2paqI2cwwFg" frameborder="0" allowfullscreen></iframe><!--<video id="video1" width="720" controls ><source type="video/mp4" src="../../media/BP-version2-introduction.mp4">Your browser does not support HTML5 video.</video>--></div><div style="float:right"><button type="button" id="dialogHelp_Level_1_1_button_BP_ver1" style="color: white ; background-color: #2E64FE;">Next</button></div></div><div id="dialogHelpStack_BP_ver1" class="dialogHiddenContent"><table><tr><td>Your first challenge: Stack another <b>Request</b> to \'move forward\', below the one we have placed for you, to request that the pegman moves forward twice.<br>The result should be:</td><td><img src="../../media/icon-trophy.png"></td><td valign="top"></td></tr><tr><td><img src="../../media/ver1_level1_stackTogether.JPG"></td><td><button type="button" id="dialogHelpStack_button_BP_ver1" style="color: white ; background-color: #2E64FE;">OK</button></td></tr></table></div><div id="dialogHelpOneTopBlock_BP_ver1" class="dialogHiddenContent"><table><tr><td>On this level, you need to stack together all of the blocks in the white workspace.</td></tr><tr><td><img src="../../media/ver1_level1_stackTogether.JPG"></td><td><button type="button" id="dialogHelpOneTopBlock_button_BP_ver1" style="color: white ; background-color: #2E64FE;">OK</button></td></tr></table></div><div id="dialogHelpOnlyOneBlocksGroup_BP_ver1" class="dialogHiddenContent"><table><tr><td><img src="help.png"></td><td>&nbsp;</td><td>On this level you should stack together all the blocks in the workspace in one group.</td><td><button type="button" id="dialogHelpOnlyOneBlocksGroup_button_BP_ver1" style="color: white ; background-color: #2E64FE;">OK</button></td></tr></table></div><div id="dialogHelpLevel_2_BP_ver1" class="dialogHiddenContent"><table><tr><td><img src="../../media/icon-trophy.png"></td><td>&nbsp;</td><td>Your next challenge: Stack additional blocks that request \'move forward\', \'turn left\' and \'turn right\' events to solve the maze.</td><td valign="top"></td><td><button type="button" id="dialogHelpLevel_2_button_BP_ver1" style="color: white ; background-color: #2E64FE;">OK</button></td></tr></table></div><div id="dialogHelpOneTopBlock_2_BP_ver1" class="dialogHiddenContent"><table><tr><td><img src="help.png"></td><td>&nbsp;</td><td>At this level you need to stack a sequence of \'request forward\' and \'request left/right\'.<iframe id="iframeOneTopBlock" src=""></iframe></td></tr></table></div><div id="dialogHelpRepeat_BP_ver1" class="dialogHiddenContent"><table><tr><td><img src="../../media/icon-trophy.png"></td><td>&nbsp;</td><td>Challenge: place blocks inside the <b>Repeat forever</b> block in the workspace to solve the maze.</td><td valign="top"></td><td><button type="button" id="dialogHelpRepeat_button_BP_ver1" style="color: white ; background-color: #2E64FE;vertical-align: bottom;">OK</button></td></tr></table></div><div id="dialogHelpRepeatMany_BP_ver1" class="dialogHiddenContent"><table><tr><td><img src="../../media/icon-trophy.png"></td><td>&nbsp;</td><td>Challenge: place a <b>Repeat forever</b> block in the workspace and put blocks in it to solve the maze.</td><td><button type="button" id="dialogHelpRepeatMany_button_BP_ver1" style="color: white ; background-color: #2E64FE;">OK</button></td></tr></table></div><div id="dialogHelp_Level_5_1_BP_ver1" class="dialogHiddenContent"><table><tr><td><img src="help_up.png" ><!--style="transform:rotate(270deg);padding:0px 15px"--></td><td>The <b>Wait for</b> block allows to wait for an event.<br><br>When the event is triggered the code proceeds to the next block.</td><td><button type="button" id="dialogHelp_Level_5_1_button_BP_ver1" style="color: white ; background-color: #2E64FE;">Next</button></td></tr></table></div><div id="dialogHelp_Level_5_2_BP_ver1" class="dialogHiddenContent"><table><tr><td><img src="help_up.png" style="padding-top:20px"><!--style="transform:rotate(270deg);padding:0px 15px"--></td><td>Here we see two scenarios.<br><br>The scenario on the left is responsible for moving the pegman forward.</td><td><button type="button" id="dialogHelp_Level_5_2_button_BP_ver1" style="color: white ; background-color: #2E64FE;">Next</button></td></tr></table></div><div id="dialogHelp_Level_5_3_BP_ver1" class="dialogHiddenContent"><table><tr><td><img src="help_up.png" style="padding-top:20px"><!--style="transform:rotate(270deg);padding:0px 15px"--></td><td>The scenario on the right is responsible for handling a left turn. It is currently disabled.<br><br>In order to enable it right-click the scenario and click \'Enable Block\'. Try first to run the program with this scenario disabled.</td><td><button type="button" id="dialogHelp_Level_5_3_button_BP_ver1" style="color: white ; background-color: #2E64FE;">OK</button></td></tr></table></div><div id="dialogHelp_Level_6_1_BP_ver1" class="dialogHiddenContent"><table><tr><td><img src="help_up.png" style="padding-top:20px"><!--style="transform:rotate(270deg);padding:0px 15px" style="padding-top:20px"--></td><td>Blocks are now organized in categories. Click on a category name (e.g., \'Control\') to see the blocks in the category.</td><td><button type="button" id="dialogHelp_Level_6_1_button_BP_ver1" style="color: white ; background-color: #2E64FE;">Next</button></td></tr></table></div><div id="dialogHelp_Level_6_2_BP_ver1" class="dialogHiddenContent"><table><tr><td><img src="../../media/icon-trophy.png"></td><td>&nbsp;</td><td>This maze includes a right turn.<br><br>Challenge: Complete this scenario such that the pegman reaches it\'s destination.</td><td valign="top"></td><td><button type="button" id="dialogHelp_Level_6_2_button_BP_ver1" style="color: white ; background-color: #2E64FE;">OK</button></td></tr></table></div><div id="dialogHelp_Level_7_4_BP_ver1" class="dialogHiddenContent"><table><tr><td><img src="help_up.png" style="padding-top:20px"><!--style="transform:rotate(270deg);padding:0px 15px" style="padding-top:20px"--></td><td>This maze includes a barrier obstacle.The scenario above waits for a \'barrier ahead\' event and then blocks \'move forward\' until a \'no barrier ahead\' is triggered.<br><br>This scenario is currently disabled. You can enable it by right clicking the scenario and clicking \'Enable Block\'. Try first to run the program without it.<br><br></td><td><button type="button" id="dialogHelp_Level_7_4_button_BP_ver1" style="color: white ; background-color: #2E64FE;">Next</button></td></tr></table></div><div id="dialogHelp_Level_8_1_BP_ver1" class="dialogHiddenContent"><table><tr><td><img src="../../media/icon-trophy.png"></td><td>&nbsp;</td><td>This maze presents a different barrier obstacle.<br><br>Challenge: In order to make the barrier disappear the pegman needs to complete a 360 degrees turn left when it encounters it.<br></td><td>&nbsp;</td><td><button type="button" id="dialogHelp_Level_8_1_button_BP_ver1" style="color: white ; background-color: #2E64FE;">Next</button></td></tr></table></div><div id="dialogHelp_Level_8_2_BP_ver1" class="dialogHiddenContent"><table><tr><td><img src="help_up.png" style="padding-top:20px"><!--style="transform:rotate(270deg);padding:0px 15px" style="padding-top:20px"--></td><td>Feel free to return to previous levels for ideas.<br><br>The solution you work on in this level is saved automatically.<br></td><td><button type="button" id="dialogHelp_Level_8_2_button_BP_ver1" style="color: white ; background-color: #2E64FE;">OK</button></td></tr></table></div><div id="dialogHelp_Level_9_1_BP_ver1" class="dialogHiddenContent"><table><tr><td><img src="help_up.png" style="padding-top:20px"><!--style="transform:rotate(270deg);padding:0px 15px" style="padding-top:20px"--></td><td>This maze presents a more <b>powerful</b> block, \'bSync\'.<br></td><td><button type="button" id="dialogHelp_Level_9_1_button_BP_ver1" style="color: white ; background-color: #2E64FE;">Next</button></td></tr></table></div><div id="dialogHelp_Level_9_2_BP_ver1" class="dialogHiddenContent"><table><tr><td><img src="help_up.png" style="padding-top:20px"><!--style="transform:rotate(270deg);padding:0px 15px" style="padding-top:20px"--></td><td>Using \'bSync\' you can  <em>request, wait, and block</em> events in parallel.<br>This scenario is similar to scenarios you\'ve seen before.<br>This scenario is responsible for handling a right turn.<br></td><td><button type="button" id="dialogHelp_Level_9_2_button_BP_ver1" style="color: white ; background-color: #2E64FE;">Next</button></td></tr></table></div><div id="dialogHelp_Level_9_3_BP_ver1" class="dialogHiddenContent"><table><tr><td><img src="help_up.png" style="padding-top:20px"><!--style="transform:rotate(270deg);padding:0px 15px" style="padding-top:20px"--></td><td>This scenario is responsible for moving the pegman forward.<br></td><td><button type="button" id="dialogHelp_Level_9_3_button_BP_ver1" style="color: white ; background-color: #2E64FE;">OK</button></td></tr></table></div><div id="dialogHelp_Level_7_1_BP_ver2" class="dialogHiddenContent"><table width="540px"><tr><td colspan="2">You can use the <b>block</b> input slot to prevent (forbid) unwanted events while requesting or waiting for desired events.<br><br>For example the following code blocks \'turn left\' until the request to \'move forward\' is triggered.</td></tr><tr><td><img src="../../media/level_10_1_ver1.JPG"></td><td><button type="button" id="dialogHelp_Level_7_1_button_BP_ver2" style="color: white ; background-color: #2E64FE;">Next</button></td></tr></table></div><div id="dialogHelp_Level_7_2_BP_ver2" class="dialogHiddenContent"><table width="540px"><tr><td colspan="2">If you want to perform several <b>request / wait-for</b> calls while blocking a certain event, you can block them in each block.<br><br>For example the following code blocks \'turn left\' until your requests to \'move forward\' and then to \'turn right\' are triggered.</td></tr><tr><td><img src="../../media/level_10_6_ver1.JPG"></td><td><button type="button" id="dialogHelp_Level_7_2_button_BP_ver2" style="color: white ; background-color: #2E64FE;">Next</button></td></tr></table></div><div id="dialogHelp_Level_10_1_BP_ver1" class="dialogHiddenContent"><table><tr><td style="float:left;"><!--<img src="../../media/icon-trophy.png" style="float: left; margin: 0px 15px 15px 0px;">TODO: Remove image here-->The pallet now contains three new events, \'no path ahead\', \'no path left\' and \'no path right\'.<br></td><td><button type="button" id="dialogHelp_Level_10_1_button_BP_ver1" style="color: white ; background-color: #2E64FE;float:right;">Next</button></td></tr></table></div><div id="dialogHelp_Level_10_2_BP_ver1" class="dialogHiddenContent"><table style= "border-collapse: collapse;"><tr><td style="padding-top: .5em;padding-bottom: .5em;"><div><!--<img src="../../media/icon-trophy.png" style="float: left; margin: 0px 15px 15px 0px;">TODO: Remove image here-->The blocks in the workspace implement the left-hand rule.</div></td></tr><tr><td style="padding-top: .5em;padding-bottom: .5em;">The left-hand rule suggests that your pegman can solve mazes by following the wall on its left.<br>I.e., it can put an imaginary left-hand on the wall and walk such that it follows the wall.</td></tr><tr><td style="padding-top: .5em;padding-bottom: .5em;padding-right: .5em;">For example, when we get a \'path left\' event, the pegman must turn left and walk forward.</td></tr><tr><td colspan="2" ><button type="button" id="dialogHelp_Level_10_2_button_BP_ver1" style="color: white ; background-color: #2E64FE;float: right;">Next</button></td></tr></table></div><div id="dialogHelp_Level_10_3_BP_ver1" class="dialogHiddenContent"><table><tr><td><img src="help_up.png" style="padding-top:20px"><!--style="transform:rotate(270deg);padding:0px 15px" style="padding-top:20px"--></td><td style="float:left;">The pallet now contains an additional block called <b>Breakupon</b>. <br> <br>The Breakupon block allows to break from the wrapped code if the event  we are breaking upon is triggered.</td><td><button type="button" id="dialogHelp_Level_10_3_button_BP_ver1" style="color: white ; background-color: #2E64FE;float:right;">Next</button></td></tr></table></div><div id="dialogHelp_Level_10_4_BP_ver1" class="dialogHiddenContent"><table><tr><td><img src="help_up.png" style="padding-top:20px"><!--style="transform:rotate(270deg);padding:0px 15px" style="padding-top:20px"--></td><td>The scenario above is responsible for turning left when possible.<br><br>It waits for a \'path left\' event and then requests to \'turn left\' and to \'move forward\' to complete the turn.</td><td><button type="button" id="dialogHelp_Level_10_4_button_BP_ver1" style="color: white ; background-color: #2E64FE;">Next</button></td></tr></table></div><div id="dialogHelp_Level_10_5_BP_ver1" class="dialogHiddenContent"><table><tr><td><img src="help_up.png" style="padding-top:20px"><!--style="transform:rotate(270deg);padding:0px 15px" style="padding-top:20px"--></td><td>The breakupon block allows to <em>reset</em> the scenario\'s state.<br><br>After a \'move forward\' the pegman is in a new square and we want to restart the loop.</td><td><button type="button" id="dialogHelp_Level_10_5_button_BP_ver1" style="color: white ; background-color: #2E64FE;">Next</button></td></tr></table></div><div id="dialogHelp_Level_10_6_BP_ver1" class="dialogHiddenContent"><table><tr><td><img src="help_up.png" style="padding-top:20px"><!--style="transform:rotate(270deg);padding:0px 15px" style="padding-top:20px"--></td><td>The scenario above is responsible for moving forward when a left turn is not possible.<br><br>It waits for a \'no path left\' event followed by a \'path ahead\' event and then requests to \'move forward\'.<br><br>The empty breakupon has no effect now. It is there for future use.</td><td><button type="button" id="dialogHelp_Level_10_6_button_BP_ver1" style="color: white ; background-color: #2E64FE;">Next</button></td></tr></table></div><div id="dialogHelp_Level_10_7_BP_ver1" class="dialogHiddenContent"><table><tr><td><img src="help_up.png" style="padding-top:20px"><!--style="transform:rotate(270deg);padding:0px 15px" style="padding-top:20px"--></td><td>The scenario above is responsible for turning right when turning left or moving forward is not possible.<br><br>It waits for a \'no path left\' event followed by a \'no path ahead\' event and finally a \'path right\' event. It then completes a turn right.</td><td><button type="button" id="dialogHelp_Level_10_7_button_BP_ver1" style="color: white ; background-color: #2E64FE;">Next</button></td></tr></table></div><div id="dialogHelp_Level_10_8_BP_ver1" class="dialogHiddenContent"><table><tr><td><img src="help_up.png" style="padding-top:20px"><!--style="transform:rotate(270deg);padding:0px 15px" style="padding-top:20px"--></td><td>The scenario above is responsible for making a U-turn when we reach a dead end.<br><br>It waits for the chain of events \'no path left\', \'no path ahead\' and \'no path right\'. It then requests to \'turn right\' twice.</td><td><button type="button" id="dialogHelp_Level_10_8_button_BP_ver1" style="color: white ; background-color: #2E64FE;">Next</button></td></tr></table></div><div id="dialogHelp_Level_10_9_BP_ver1" class="dialogHiddenContent"><table><tr><td><img src="help_up.png" style="padding-top:20px"><!--style="transform:rotate(270deg);padding:0px 15px" style="padding-top:20px"--></td><td>The proposed solution performs redundant \'right turns\'.<br> <br>Execute the code yourself to see the problem and correct the code such that it will not perform these redundant actions.</td><td><button type="button" id="dialogHelp_Level_10_9_button_BP_ver1" style="color: white ; background-color: #2E64FE;">OK</button></td></tr></table></div><div id="dialogHelp_Level_10_1_BP_ver2" class="dialogHiddenContent"><table><tr><td style="float:left;"><!--<img src="../../media/icon-trophy.png" style="float: left; margin: 0px 15px 15px 0px;">TODO: Remove image here-->The pallet now contains three new events, \'no path ahead\', \'no path left\' and \'no path right\'.<br></td><td><button type="button" id="dialogHelp_Level_10_1_button_BP_ver2" style="color: white ; background-color: #2E64FE;float:right;">Next</button></td></tr></table></div><div id="dialogHelp_Level_10_2_BP_ver2" class="dialogHiddenContent"><table style= "border-collapse: collapse;"><tr><td style="padding-top: .5em;padding-bottom: .5em;"><div><!--<img src="../../media/icon-trophy.png" style="float: left; margin: 0px 15px 15px 0px;">TODO: Remove image here-->The blocks in the workspace implement the left-hand rule.</div></td></tr><tr><td style="padding-top: .5em;padding-bottom: .5em;">The left-hand rule suggests that your pegman can solve mazes by following the wall on its left.<br>I.e., it can put an imaginary left-hand on the wall and walk such that it follows the wall.</td></tr><tr><td style="padding-top: .5em;padding-bottom: .5em;padding-right: .5em;">For example, when we get a \'path left\' event, the pegman must turn left and walk forward.</td></tr><tr><td colspan="2" ><button type="button" id="dialogHelp_Level_10_2_button_BP_ver2" style="color: white ; background-color: #2E64FE;float: right;">Next</button></td></tr></table></div><div id="dialogHelp_Level_10_3_BP_ver2" class="dialogHiddenContent"><table><tr><td><img src="help_up.png" style="padding-top:20px"><!--style="transform:rotate(270deg);padding:0px 15px" style="padding-top:20px"--></td><td style="float:left;">The pallet now contains additional blocks called <b>label</b> and <b>break</b>. <br> <br>The <b>label</b> block allows to give a name to a code section.<br><br>The <b>break</b> block allows to exit a labeled code section and to continue the execution from the end of the section.<br><br>You can use letters, digits and spaces for the \'Label_Name\'. Be consistent with it in the <b>break</b> block.</td><td><button type="button" id="dialogHelp_Level_10_3_button_BP_ver2" style="color: white ; background-color: #2E64FE;float:right;">Next</button></td></tr></table></div><div id="dialogHelp_Level_10_4_BP_ver2" class="dialogHiddenContent"><table><tr><td><img src="help_up.png" style="padding-top:20px"><!--style="transform:rotate(270deg);padding:0px 15px" style="padding-top:20px"--></td><td style="float:left;">The pallet also contains the blocks <b>create list</b> and <b>if last event</b>. <br> <br>The <b>create list</b> block allows to wait for several events and the <b>if last event</b> allows to find out which event was triggered.</td><td><button type="button" id="dialogHelp_Level_10_4_button_BP_ver2" style="color: white ; background-color: #2E64FE;float:right;">Next</button></td></tr></table></div><div id="dialogHelp_Level_10_5_BP_ver2" class="dialogHiddenContent"><div>Let\'s see an example with these new blocks.<br>The following scenario is constantly requesting to \'move forward\' while waiting for \'path left\' and \'path right\'.<br>if the last event which was triggered was \'path left\' we break from the loop and then request to \'turn left\'.<br></div><div><img src="../../media/level10_label_and_break.JPG" style="height: 305px; width:737px;"></div><div><button type="button" id="dialogHelp_Level_10_5_button_BP_ver2" style="float:right; color: white ; background-color: #2E64FE;">Next</button></div></div><div id="dialogHelp_Level_10_6_BP_ver2" class="dialogHiddenContent"><div><img src="help_up.png" style="float: left; padding-top:20px"></div><div>The scenario above is responsible for turning left when there is a path to the left.<br><br>It waits for a \'path left\' event and then requests to \'turn left\' and \'move forward\'. Using the <b>create list</b> block the scenario also waits for a \'move forward\' event.<br><br>if the last event was \'move forward\' we want to restart the scenario , because a left turn is no longer relevant. We achieve this functionality by breaking from the label and start over.</div><div><button type="button" id="dialogHelp_Level_10_6_button_BP_ver2" style="float:right; color: white ; background-color: #2E64FE;">Next</button></div></div><div id="dialogHelp_Level_10_7_BP_ver2" class="dialogHiddenContent"><table><tr><td><img src="help_up.png" style="padding-top:20px"></td><td>The scenario above is responsible for moving forward when a left turn is not possible.<br><br>It waits for a \'no path left\' event followed by a \'path ahead\' event and then requests to \'move forward\'.<br><br>The empty slots in the <b>create list</b> block has no effect now. It is there for future use.</td><td><button type="button" id="dialogHelp_Level_10_7_button_BP_ver2" style="color: white ; background-color: #2E64FE;">Next</button></td></tr></table></div><div id="dialogHelp_Level_10_8_BP_ver2" class="dialogHiddenContent"><table><tr><td><img src="help_up.png" style="padding-top:20px"><!--style="transform:rotate(270deg);padding:0px 15px" style="padding-top:20px"--></td><td>The scenario above is responsible for turning right when turning left or moving forward is not possible.<br><br>It waits for a \'no path left\' event followed by a \'no path ahead\' event and finally a \'path right\' event. It then completes a turn right.</td><td><button type="button" id="dialogHelp_Level_10_8_button_BP_ver2" style="color: white ; background-color: #2E64FE;">Next</button></td></tr></table></div><div id="dialogHelp_Level_10_9_BP_ver2" class="dialogHiddenContent"><table><tr><td><img src="help_up.png" style="padding-top:20px"><!--style="transform:rotate(270deg);padding:0px 15px" style="padding-top:20px"--></td><td>The scenario above is responsible for making a U-turn when we reach a dead end.<br><br>It waits for the chain of events \'no path left\', \'no path ahead\' and \'no path right\'. It then requests to \'turn right\' twice.</td><td><button type="button" id="dialogHelp_Level_10_9_button_BP_ver2" style="color: white ; background-color: #2E64FE;">Next</button></td></tr></table></div><div id="dialogHelp_Level_10_10_BP_ver2" class="dialogHiddenContent"><table><tr><td><img src="help_up.png" style="padding-top:20px"><!--style="transform:rotate(270deg);padding:0px 15px" style="padding-top:20px"--></td><td>The proposed solution performs redundant \'right turns\'.<br> <br>Execute the code yourself to see the problem and correct the code such that it will not perform these redundant actions.</td><td><button type="button" id="dialogHelp_Level_10_10_button_BP_ver2" style="color: white ; background-color: #2E64FE;">OK</button></td></tr></table></div><!-------------------------------------------------------------------------------------------------------------------------------><!-----------------------------------------------------Pegman down the barrier messages - Start------------------------------><!-------------------------------------------------------------------------------------------------------------------------------><div id="dialogHelp_Level_slowMotion_BP" class="dialogHiddenContent"><table><tr><td><img src="help_up.png" style="transform:rotate(270deg);padding:0px 15px"><!--style="transform:rotate(270deg);padding:0px 15px" style="padding-top:20px"--></td><td>The single step button allows you slow down the execution and see the execution of a single event.<br><br>It will appear after you hit the \'pause\' for the first time.</td><td><button type="button" id="dialogHelp_Level_slowMotion_button_BP" style="color: white ; background-color: #2E64FE;">Next</button></td></tr></table></div><div id="dialogHelp_Level_continueB_BP" class="dialogHiddenContent"><table><tr><td><img src="help_up.png" style="transform:rotate(270deg);padding:0px 15px"><!--style="transform:rotate(270deg);padding:0px 15px" style="padding-top:20px"--></td><td>If you want to stop the slow motion and continue in regular speed, press \'continue\'.<br><br>The \'continue\' button will appear once you\'ve pressed the \'slow motion\' button.<br></td><td><button type="button" id="dialogHelp_Level_continueB_button_BP" style="color: white ; background-color: #2E64FE;">OK</button></td></tr></table></div><div id="dialogPegmanTranspassBarrier_Level_7_BP_ver1" class="dialogHiddenContent"><table><tr><td><img src="help_up.png"></td><td>Your pegman was arrested for crossing a barrier.<br><br>You should wait for the barrier to disappear before moving forward.<br></td><td><img src="../../media/Users-Policeman-icon.png" height=80 width=80></td><td><button type="button" id="dialogPegmanTranspassBarrier_Level_7_button_BP_ver1" style="color: white ; background-color: #2E64FE;">OK</button></td></tr></table></div><div id="dialogPegmanTranspassBarrier_Level_8_BP_ver1" class="dialogHiddenContent"><table><tr><td><img src="help_up.png"></td><td>Your pegman was arrested for crossing a barrier.<br><br>In order to make the barrier disappear, the pegman needs to complete a 360 degrees turn left when it encounters it.<br></td><td><!--<img src="the_White_Rabbit.png" height=110 width=80>TODO: Remove image from folder--><img src="../../media/Users-Policeman-icon.png" height=80 width=80></td><td><button type="button" id="dialogPegmanTranspassBarrier_Level_8_button_BP_ver1" style="color: white ; background-color: #2E64FE;">OK</button></td></tr></table></div><!--Comment out style="resize:both; overflow:auto;"--><div id="dialogDoneBP" class="dialogHiddenContent"  scrolling="no" style="width:auto; height:auto; "><!--TODO: Add class here for these messages and adjust the CSS file--- --><div id="iframeDiv" scrolling="no" style="overflow:visible; width:100%;"><iframe id="iframeDialogDoneBP" src="" style="overflow:visible; border-style:none; width:100%; height:100%;"></iframe> <!---height="300px" width="800px"--></div><div style="margin-top:5ex;margin-bottom:0px;margin-right:0px;margin-left:5ex;"><img src="../../media/1x1.gif" id="pegSpinBP" style="padding: 5ex 2.75ex 1.5ex 3ex"><!--Hard conding pegmen view--></div><div id="dialogDoneButtonsBP" class="farSide" style="padding: 1ex 3ex 0;"></div></div><div id="dialogHelp_Level_showMessages" class="dialogHiddenContent"><table><tr><td>You should reset the maze before starting the explanation from the top.</td><td><button type="button" id="dialogHelp_Level_showMessages_button" style="color: white ; background-color: #2E64FE;">OK</button></td></tr></table></div><!-----------------------------------------------------------------------------------------------------------------------------><!-----------------------------------------------------Pegman down the rabbit barrier messages - End------------------------------><!-----------------------------------------------------------------------------------------------------------------------------><!-----------------------------------------------------------------------------------------------------------------------------><!-------------------------------------------------------Version 1 High level idioms messages - End----------------------------><!-----------------------------------------------------------------------------------------------------------------------------><!-----------------------------------------------------------------------------------------------------------------------------><!-------------------------------------------------------Version 2 Low level idioms messages- Start----------------------------><!-----------------------------------------------------------------------------------------------------------------------------><div id="dialogHelp_Level_1_1_BP_ver2" class="dialogHiddenContent" style="width:auto;"><div>Please press the play button to start the tutorial.</div><div style="margin:10px 10px 10px 10px; padding:0px 0px 0px 0px; text-align:center;"><!--<iframe width="640" height="360" src="http://www.youtube.com/embed/2paqI2cwwFg?rel=0" frameborder="0" allowfullscreen></iframe>--><iframe width="640" height="360" src="//www.youtube.com/embed/DPNSE9nIYPc" frameborder="0" allowfullscreen></iframe><!--<video id="video2" width="720" controls ><source type="video/mp4" src="../../media/introduction-version2.mp4">Your browser does not support HTML5 video.</video>--></div><div style="float:right"><button type="button" id="dialogHelp_Level_1_1_button_BP_ver2" style="color: white ; background-color: #2E64FE;">Next</button></div></div><div id="dialogHelpStack_BP_ver2" class="dialogHiddenContent"><table><tr><td width=75px>Using <b>bSync</b> you can  <em>request, wait-for, and block</em> events.<br><br>Your first challenge: Stack another <b>bSync</b>, below the one we placed for you, to request that the pegman moves forward twice. The result should be:</td><td><img src="../../media/icon-trophy.png"></td></tr><tr><td><img src="../../media/ver2_level1_stackTogether.JPG"></td><td><button type="button" id="dialogHelpStack_button_BP_ver2" style="color: white ; background-color: #2E64FE;">OK</button></td></tr></table></div><div id="dialogHelpOneTopBlock_BP_ver2" class="dialogHiddenContent"><table><tr><td>On this level, you need to stack together all of the blocks in the white workspace.</td></tr><tr><td><img src="../../media/ver2_level1_stackTogether.JPG"></td><td><button type="button" id="dialogHelpOneTopBlock_button_BP_ver2" style="color: white ; background-color: #2E64FE;">OK</button></td></tr></table></div><div id="dialogHelpLevel_2_BP_ver2" class="dialogHiddenContent"><table><tr><td><img src="../../media/icon-trophy.png"></td><td>&nbsp;</td><td>Your next challenge: Stack additional blocks that request \'move forward\', \'turn left\' and \'turn right\' events to solve the maze.</td><td><button type="button" id="dialogHelpLevel_2_button_BP_ver2" style="color: white ; background-color: #2E64FE;">OK</button></td></tr></table></div><div id="dialogHelpRepeat_BP_ver2" class="dialogHiddenContent"><table><tr><td><img src="help_up.png"></td><td>Use this block to repeat.</td><td><img src="help.png"></td></tr></table></div><div id="dialogHelp_Level_5_1_BP_ver2" class="dialogHiddenContent"><table><tr><td><img src="help_up.png" ><!--style="transform:rotate(270deg);padding:0px 15px"--></td><td>The <b>wait-for</b> input slot in <b>bSync</b> allows to wait for an event.<br><br>When the event is triggered the code proceeds to the next bSync.</td><td><button type="button" id="dialogHelp_Level_5_1_button_BP_ver2" style="color: white ; background-color: #2E64FE;">Next</button></td></tr></table></div><div id="dialogHelp_Level_5_2_BP_ver2" class="dialogHiddenContent"><table><tr><td><img src="help_up.png" style="padding-top:20px"><!--style="transform:rotate(270deg);padding:0px 15px"--></td><td>Here we see two scenarios. The upper scenario is responsible for moving the pegman forward.</td><td><button type="button" id="dialogHelp_Level_5_2_button_BP_ver2" style="color: white ; background-color: #2E64FE;">Next</button></td></tr></table></div><div id="dialogHelp_Level_5_3_BP_ver2" class="dialogHiddenContent"><table><tr><td><img src="help_up.png" style="padding-top:20px"><!--style="transform:rotate(270deg);padding:0px 15px"--></td><td>The lower scenario is responsible for handling a left turn. It is currently disabled.<br><br>In order to enable it right-click the scenario and click \'Enable Block\'. Try first to run the program with this scenario disabled.</td><td><button type="button" id="dialogHelp_Level_5_3_button_BP_ver2" style="color: white ; background-color: #2E64FE;">OK</button></td></tr></table></div><!--TODO: Remove this message, using dialogHelp_Level_6_1_BP_ver1 for both versions--><div id="dialogHelp_Level_6_1_BP_ver2" class="dialogHiddenContent"><table><tr><td><img src="help_up.png" style="padding-top:20px"></td><td>Blocks are now nested inside the categories. Click, for example, on ‘Control’ to see the blocks in the category.</td><td><button type="button" id="dialogHelp_Level_6_1_button_BP_ver2" style="color: white ; background-color: #2E64FE;">Next</button></td></tr></table></div><div id="dialogHelp_Level_6_2_BP_ver2" class="dialogHiddenContent"><table><tr><td><img src="../../media/icon-trophy.png"></td><td>&nbsp;</td><td>This maze includes a right turn.<br><br>Challenge: Complete this scenario such that the pegman will reach it\'s destination.</td><td valign="top"></td><td><button type="button" id="dialogHelp_Level_6_2_button_BP_ver2" style="color: white ; background-color: #2E64FE;">OK</button></td></tr></table></div><div id="dialogHelp_Level_7_4_BP_ver2" class="dialogHiddenContent"><table><tr><td><img src="help_up.png" style="padding-top:20px"><!--style="transform:rotate(270deg);padding:0px 15px" style="padding-top:20px"--></td><td>This maze includes a barrier obstacle.The scenario above waits for a \'barrier ahead\' event and then blocks \'move forward\' until a \'no barrier ahead\' is triggered.<br><br>This scenario is currently disabled. You can enable it by right clicking the scenario and clicking \'Enable Block\'. Try first to run the program without it.<br><br></td><td><button type="button" id="dialogHelp_Level_7_4_button_BP_ver2" style="color: white ; background-color: #2E64FE;">Next</button></td></tr></table></div><div id="dialogHelp_Level_7_5_BP_ver2" class="dialogHiddenContent"><table><tr><td><img src="help_up.png" style="padding-top:20px;"><!--style="transform:rotate(270deg);padding:0px 15px" style="padding-top:20px"--></td><td>When this scenario encounters a barrier ahead, it waits for the barrier to disappear while blocking \'move forward\'.</td><td><button type="button" id="dialogHelp_Level_7_5_button_BP_ver2" style="color: white ; background-color: #2E64FE;">OK</button></td></tr></table></div><div id="dialogHelp_Level_8_1_BP_ver2" class="dialogHiddenContent"><table><tr><td><img src="../../media/icon-trophy.png"></td><td>&nbsp;</td><td>This maze presents a different barrier obstacle.<br><br>Challenge: In order to make the barrier disappear the pegman needs to complete a 360 degrees turn left when it encounters it.<br></td><td>&nbsp;</td><td><button type="button" id="dialogHelp_Level_8_1_button_BP_ver2" style="color: white ; background-color: #2E64FE;">Next</button></td></tr></table></div><div id="dialogHelp_Level_8_2_BP_ver2" class="dialogHiddenContent"><table><tr><td><img src="help_up.png" style="padding-top:20px"><!--style="transform:rotate(270deg);padding:0px 15px" style="padding-top:20px"--></td><td>Feel free to return to previous levels for ideas.<br><br>The solution you work on in this level is saved automatically.<br></td><td><button type="button" id="dialogHelp_Level_8_2_button_BP_ver2" style="color: white ; background-color: #2E64FE;">OK</button></td></tr></table></div><div id="dialogHelp_Level_9_1_BP_ver2" class="dialogHiddenContent"><table><tr><td><img src="help_up.png" style="padding-top:20px"><!--style="transform:rotate(270deg);padding:0px 15px" style="padding-top:20px"--></td><td>This maze presents a new block,  <b>Request</b>.<br>The <em>Request</em> block is a shorthand of the <em>bSync</em> functionality for requesting events.<br></td><td><button type="button" id="dialogHelp_Level_9_1_button_BP_ver2" style="color: white ; background-color: #2E64FE;">Next</button></td></tr></table></div><div id="dialogHelp_Level_9_2_BP_ver2" class="dialogHiddenContent"><table><tr><td><img src="help_up.png" style="padding-top:20px"><!--style="transform:rotate(270deg);padding:0px 15px" style="padding-top:20px"--></td><td>Another block introduced is <b>Wait-for</b>.<br>The <em>Wait-for</em> block is a shorthand of the \'bSync\' functionality \'wait-for\'.<br></td><td><button type="button" id="dialogHelp_Level_9_2_button_BP_ver2" style="color: white ; background-color: #2E64FE;">Next</button></td></tr></table></div><div id="dialogHelp_Level_9_3_BP_ver2" class="dialogHiddenContent"><table><tr><td><img src="help_up.png" style="padding-top:20px"><!--style="transform:rotate(270deg);padding:0px 15px" style="padding-top:20px"--></td><td>This scenario is similar to scenarios you\'ve seen before.<br>It is responsible for handling a right turn whenever it is possible.<br></td><td><button type="button" id="dialogHelp_Level_9_3_button_BP_ver2" style="color: white ; background-color: #2E64FE;">Next</button></td></tr></table></div><div id="dialogHelp_Level_9_4_BP_ver2" class="dialogHiddenContent"><table><tr><td><img src="help_up.png" style="padding-top:20px"><!--style="transform:rotate(270deg);padding:0px 15px" style="padding-top:20px"--></td><td>This scenario is responsible for moving the pegman forward.<br></td><td><button type="button" id="dialogHelp_Level_9_4_button_BP_ver2" style="color: white ; background-color: #2E64FE;">OK</button></td></tr></table></div><div id="dialogHelp_Level_7_1_BP_ver1" class="dialogHiddenContent"><table><tr><td>This maze presents a new construct called <b>Blocking</b>.<br><br>The Blocking construct allows to prevent (forbid) unwanted events while requesting or waiting for desired events.<br><br>For example the following code blocks \'turn left\' until the request to \'move forward\' is triggered.</td></tr><tr><td><img src="../../media/level_10_2_ver1.JPG"></td><td><button type="button" id="dialogHelp_Level_7_1_button_BP_ver1" style="color: white ; background-color: #2E64FE;">Next</button></td></tr></table></div><div id="dialogHelp_Level_7_2_BP_ver1" class="dialogHiddenContent"><table><tr><td>If you want to perform several <b>Request / Wait for</b> calls while blocking a certain event, you could list them inside the <b>Blocking</b> construct.<br><br>For example you can block \'turn left\' until your requests to \'move forward\' and then to \'turn right\' are triggered.</td></tr><tr><td><img src="../../media/level_10_5_ver1.JPG"></td><td><button type="button" id="dialogHelp_Level_7_2_button_BP_ver1" style="color: white ; background-color: #2E64FE;">Next</button></td></tr></table></div><!--------------------------------------------------------------------------------------------------------------------------------><!-------------------------------------------------------Version 2 Low level idioms messages - End--------------------------------><!--------------------------------------------------------------------------------------------------------------------------------><!-----------------------------------------------------------------------------------------------------------------------------------------------------><!------------------------------------------------------------BP\'s Messages--End------------------------------------------------------------------------><!-----------------------------------------------------------------------------------------------------------------------------------------------------><div id="dialogDone" class="dialogHiddenContent"><div id="dialogDoneText" style="font-size: large; margin: 1em;"></div><img src="../../media/1x1.gif" id="pegSpin"><!-- Remember to add listener if we return to this solution   --><div id="dialogDoneButtons" class="farSide" style="padding: 1ex 3ex 0"></div></div><div id="dialogHelpStack" class="dialogHiddenContent"><table><tr><td><img src="help.png"></td><td>&nbsp;</td><td>Stack a couple of \'move forward\' blocks together to help me reach the goal.</td><td valign="top"><img src="help_stack.png" class="mirrorImg" height=63 width=136></td></tr></table></div><div id="dialogHelpOneTopBlock" class="dialogHiddenContent"><table><tr><td><img src="help.png"></td><td>&nbsp;</td><td>On this level, you need to stack together all of the blocks in the white workspace.<iframe id="iframeOneTopBlock" src=""></iframe></td></tr></table></div><div id="dialogHelpRun" class="dialogHiddenContent"><table><tr><td>Run the program to see what happens.</td><td rowspan=2><img src="help.png"></td></tr><tr><td><div><img src="help_run.png" class="mirrorImg" height=27 width=141></div></td></tr></table></div><div id="dialogHelpReset" class="dialogHiddenContent"><table><tr><td>Your program didn\'t solve the maze.  Press \'Reset\' and try again.</td><td rowspan=2><img src="help.png"></td></tr><tr><td><div><img src="help_run.png" class="mirrorImg" height=27 width=141></div></td></tr></table></div><div id="dialogHelpRepeat" class="dialogHiddenContent"><table><tr><td><img src="help_up.png"></td><td>Reach the end of this path using only two blocks.  Use \'repeat\' to run a block more than once.</td><td><img src="help.png"></td></tr></table></div><div id="dialogHelpCapacity" class="dialogHiddenContent"><table><tr><td><img src="help.png"></td><td>&nbsp;</td><td>You have used up all the blocks for this level.  To create a new block, you first need to delete an existing block.</td></tr></table></div><div id="dialogHelpRepeatMany" class="dialogHiddenContent"><table><tr><td><img src="help_up.png"></td><td>You can fit more than one block inside a \'repeat\' block.</td><td><img src="help.png"></td></tr></table></div><div id="dialogHelpIf" class="dialogHiddenContent"><table><tr><td><img src="help_up.png"></td><td>An \'if\' block will do something only if the condition is true.  Try turning left if there is a path to the left.</td><td><img src="help.png"></td></tr></table></div><div id="dialogHelpMenu" class="dialogHiddenContent"><table><tr><td><img src="help_up.png"></td><td id="helpMenuText">Click on %1 in the \'if\' block to change its condition.</td><td><img src="help.png"></td></tr></table></div><div id="dialogHelpIfElse" class="dialogHiddenContent"><table><tr><td><img src="help_down.png"></td><td>If-else blocks will do one thing or the other.</td><td><img src="help.png"></td></tr></table></div><div id="dialogHelpWallFollow" class="dialogHiddenContent"><table><tr><td><img src="help.png"></td><td>&nbsp;</td><td>Can you solve this complicated maze?  Try following the left-hand wall.  Advanced programmers only!' + apps.ok(null, null, opt_ijData) + '</td></tr></table></div>';
  return output;
};


mazepage.toolbox = function(opt_data, opt_ignored, opt_ijData) {
  return '<xml id="toolbox" style="display: none;"><!--------Version 2 Starting here----->' + ((opt_ijData.level < 6) ? '<block type="bsync"><value name="REQUEST"><block type="bp_forward"></block></value></block><block type="bsync"><value name="REQUEST"><block type="bp_right"></block></value></block><block type="bsync"><value name="REQUEST"><block type="bp_left"></block></value></block>' + ((opt_ijData.level == 5) ? '<!--This section should be more modular!--><block type="bsync"><value name="WAIT-FOR"><block type="bp_path_left"></block></value></block><block type="bsync"><value name="WAIT-FOR"><block type="bp_path_ahead"></block></value></block>' : '') + ((opt_ijData.level > 2) ? '<block type="bp_repeat_forever"></block>' : '') : '') + '<!--Level is higher than 6, blocks are nested inside categories.-->' + ((opt_ijData.level >= 6) ? '<category id="BP_control_2" name="Control"><block type="bp_repeat_forever"></block><block type="bsync"></block>' + ((opt_ijData.level == 9) ? '<block type="bp_label"></block><block type="bp_break"></block><block type="bp_if_last_event"></block><block type="lists_create_with"></block><!--<block type="bp_if_not_last_event"></block>-->' : '') + '</category><category id="BP_pegman_events_2" name="Pegman Events"><block type="bp_forward"></block><block type="bp_right"></block><block type="bp_left"></block></category><category id="BP_maze_events_2" name="Maze Events">' + ((opt_ijData.level < 9) ? '<!--TODO: Hard coded change , think on how to re factor--><block type="bp_path_ahead"></block><block type="bp_path_left"></block><block type="bp_path_right"></block>' + ((opt_ijData.level > 6) ? (opt_ijData.level < 9) ? '<block type="bp_barrierAhead"></block><block type="bp_no_barrierAhead"></block>' : '' : '') : '') + ((opt_ijData.level == 9) ? '<block type="bp_path_left"></block><block type="bp_no_path_left"></block><block type="bp_path_ahead"></block><block type="bp_no_path_ahead"></block><block type="bp_path_right"></block><block type="bp_no_path_right"></block>' : '') + '</category>' : '') + '</xml>';
};


mazepage.readonly = function(opt_data, opt_ignored, opt_ijData) {
  return mazepage.messages(null, null, opt_ijData) + '<script type="text/javascript;version=1.7"  src="../../blockly_compressed.js"><\/script><script type="text/javascript;version=1.7"  src="../../' + soy.$$escapeHtml(opt_ijData.langSrc) + '"><\/script><script type="text/javascript;version=1.7" src="blocks.js"><\/script><script type="text/javascript;version=1.7" src="bpblocks.js"><\/script><div id="blockly"></div>';
};
